# This "input" configures a global authorization rule to enable public access to
# all models in this schema. Learn more about authorization rules here: https://docs.amplify.aws/cli/graphql/authorization-rules
# input AMPLIFY { globalAuthRule: AuthRule = { allow: public } } # FOR TESTING ONLY!

### Important
# Copy this schema definition file into the your amplify api configuration path that is automatically generated by amplify-cli
# e.g., {workspace}/{project_name}/amplify/backend/api/{project_name}/schema.graphql
###

type Class @model @auth(rules: [{ allow: private }]) {
  id: ID!
  name: String!
  description: String
  image: String!
  class_flag: Int
  courseId: ID! @index(name: "byCourse")
  url: String
  comments: [Comment] @hasMany(indexName: "byClass", fields: ["id"])
  author: String
}

type Course @model @auth(rules: [{ allow: private }]) {
  id: ID!
  name: String!
  classes: [Class] @hasMany(indexName: "byCourse", fields: ["id"])
}

type Comment @model @auth(rules: [{ allow: owner }, { allow: private, operations: [read] }]) {
  id: ID!
  classId: ID! @index(name: "byClass")
  content: String
  owners: [String]
}

type Track @model @auth(rules: [{ allow: owner }]) {
  classId: String! @primaryKey(sortKeyFields: ["userId"])
  userId: ID!
  completion: Boolean
  played: String
}

type Reward @model @auth(rules: [{ allow: owner }]) {
  id: ID!
  classId: String!
  userId: String!
  point: String
}

type Profile @model @auth(rules: [{ allow: owner }]) {
  id: String! @primaryKey
  point: Int
  userId: String!
  name: String
  organization: String
}

type Survey @model @auth(rules: [{ allow: owner }]) {
  classId: String! @primaryKey(sortKeyFields: ["userId"])
  userId: ID!
  questionnaireVersion: String!
  scores: [Int]
}

type Channel @model @auth(rules: [{allow: owner}, {allow: private, operations: [read]}]) {
  id: ID!
  name: String!
  icon: String!
  messges: [Message] @hasMany(indexName: "byChannel", fields: ["id"])
}

type Message @model @auth(rules: [{allow: owner}, {allow: private, operations: [read]}]) {
  id: ID!
  channelId: ID! @index(name: "byChannel")
  content: String
}
